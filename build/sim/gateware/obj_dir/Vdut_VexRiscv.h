// Verilated -*- C++ -*-
// DESCRIPTION: Verilator output: Design internal header
// See Vdut.h for the primary calling header

#ifndef _Vdut_VexRiscv_H_
#define _Vdut_VexRiscv_H_

#include "verilated_heavy.h"
#include "Vdut__Dpi.h"

class Vdut__Syms;
class VerilatedVcd;

//----------

VL_MODULE(Vdut_VexRiscv) {
  public:
    
    // PORTS
    VL_IN8(__PVT__clk,0,0);
    VL_IN8(__PVT__timerInterrupt,0,0);
    VL_IN8(__PVT__softwareInterrupt,0,0);
    VL_OUT8(__PVT__iBusWishbone_CYC,0,0);
    VL_OUT8(__PVT__iBusWishbone_STB,0,0);
    VL_IN8(__PVT__iBusWishbone_ACK,0,0);
    VL_OUT8(__PVT__iBusWishbone_WE,0,0);
    VL_OUT8(__PVT__iBusWishbone_SEL,3,0);
    VL_IN8(__PVT__iBusWishbone_ERR,0,0);
    VL_OUT8(__PVT__iBusWishbone_BTE,1,0);
    VL_OUT8(__PVT__iBusWishbone_CTI,2,0);
    VL_OUT8(__PVT__dBusWishbone_CYC,0,0);
    VL_OUT8(__PVT__dBusWishbone_STB,0,0);
    VL_IN8(__PVT__dBusWishbone_ACK,0,0);
    VL_OUT8(__PVT__dBusWishbone_WE,0,0);
    VL_OUT8(__PVT__dBusWishbone_SEL,3,0);
    VL_IN8(__PVT__dBusWishbone_ERR,0,0);
    VL_OUT8(__PVT__dBusWishbone_BTE,1,0);
    VL_OUT8(__PVT__dBusWishbone_CTI,2,0);
    VL_IN8(__PVT__reset,0,0);
    VL_IN(__PVT__externalResetVector,31,0);
    VL_IN(__PVT__externalInterruptArray,31,0);
    VL_OUT(__PVT__iBusWishbone_ADR,29,0);
    VL_IN(__PVT__iBusWishbone_DAT_MISO,31,0);
    VL_OUT(__PVT__iBusWishbone_DAT_MOSI,31,0);
    VL_OUT(__PVT__dBusWishbone_ADR,29,0);
    VL_IN(__PVT__dBusWishbone_DAT_MISO,31,0);
    VL_OUT(__PVT__dBusWishbone_DAT_MOSI,31,0);
    
    // LOCAL SIGNALS
    VL_SIG8(__PVT___zz_220_,0,0);
    VL_SIG8(__PVT___zz_222_,0,0);
    VL_SIG8(__PVT___zz_225_,0,0);
    VL_SIG8(__PVT___zz_228_,0,0);
    VL_SIG8(__PVT___zz_229_,0,0);
    VL_SIG8(__PVT___zz_231_,0,0);
    VL_SIG8(__PVT___zz_233_,1,0);
    VL_SIG8(__PVT___zz_234_,0,0);
    VL_SIG8(__PVT___zz_235_,0,0);
    VL_SIG8(__PVT___zz_238_,0,0);
    VL_SIG8(__PVT___zz_241_,0,0);
    VL_SIG8(__PVT___zz_244_,0,0);
    VL_SIG8(__PVT___zz_249_,0,0);
    VL_SIG8(__PVT___zz_250_,0,0);
    VL_SIG8(__PVT___zz_251_,0,0);
    VL_SIG8(__PVT___zz_256_,0,0);
    VL_SIG8(__PVT___zz_257_,0,0);
    VL_SIG8(__PVT___zz_258_,0,0);
    VL_SIG8(__PVT___zz_259_,0,0);
    VL_SIG8(__PVT___zz_260_,0,0);
    VL_SIG8(__PVT___zz_261_,0,0);
    VL_SIG8(__PVT___zz_262_,0,0);
    VL_SIG8(__PVT___zz_267_,0,0);
    VL_SIG8(__PVT___zz_268_,0,0);
    VL_SIG8(__PVT___zz_269_,0,0);
    VL_SIG8(__PVT___zz_270_,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_cache_io_cpu_prefetch_haltIt,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_cache_io_mem_cmd_valid,0,0);
    VL_SIG8(__PVT__dataCache_1___05Fio_cpu_writeBack_haltIt,0,0);
    VL_SIG8(__PVT__dataCache_1___05Fio_cpu_writeBack_mmuException,0,0);
    VL_SIG8(__PVT__dataCache_1___05Fio_cpu_writeBack_unalignedAccess,0,0);
    VL_SIG8(__PVT__dataCache_1___05Fio_cpu_writeBack_accessError,0,0);
    VL_SIG8(__PVT__dataCache_1___05Fio_cpu_flush_ready,0,0);
    VL_SIG8(__PVT__dataCache_1___05Fio_cpu_redo,0,0);
    VL_SIG8(__PVT__dataCache_1___05Fio_mem_cmd_valid,0,0);
    VL_SIG8(__PVT__dataCache_1___05Fio_mem_cmd_payload_wr,0,0);
    VL_SIG8(__PVT__dataCache_1___05Fio_mem_cmd_payload_length,2,0);
    VL_SIG8(__PVT__dataCache_1___05Fio_mem_cmd_payload_last,0,0);
    VL_SIG8(__PVT___zz_271_,0,0);
    VL_SIG8(__PVT___zz_272_,0,0);
    VL_SIG8(__PVT___zz_274_,0,0);
    VL_SIG8(__PVT___zz_275_,0,0);
    VL_SIG8(__PVT___zz_276_,0,0);
    VL_SIG8(__PVT___zz_277_,0,0);
    VL_SIG8(__PVT___zz_278_,0,0);
    VL_SIG8(__PVT___zz_279_,0,0);
    VL_SIG8(__PVT___zz_280_,0,0);
    VL_SIG8(__PVT___zz_281_,0,0);
    VL_SIG8(__PVT___zz_282_,0,0);
    VL_SIG8(__PVT___zz_283_,0,0);
    VL_SIG8(__PVT___zz_286_,0,0);
    VL_SIG8(__PVT___zz_287_,0,0);
    VL_SIG8(__PVT___zz_288_,1,0);
    VL_SIG8(__PVT___zz_290_,0,0);
    VL_SIG8(__PVT___zz_292_,0,0);
    VL_SIG8(__PVT___zz_293_,0,0);
    VL_SIG8(__PVT___zz_298_,0,0);
    VL_SIG8(__PVT___zz_300_,0,0);
    VL_SIG8(__PVT___zz_302_,0,0);
    VL_SIG8(__PVT___zz_303_,0,0);
    VL_SIG8(__PVT___zz_305_,0,0);
    VL_SIG8(__PVT___zz_306_,0,0);
    VL_SIG8(__PVT___zz_307_,0,0);
    VL_SIG8(__PVT___zz_308_,0,0);
    VL_SIG8(__PVT___zz_309_,0,0);
    VL_SIG8(__PVT___zz_310_,0,0);
    VL_SIG8(__PVT___zz_311_,0,0);
    VL_SIG8(__PVT___zz_312_,0,0);
    VL_SIG8(__PVT___zz_313_,0,0);
    VL_SIG8(__PVT___zz_314_,0,0);
    VL_SIG8(__PVT___zz_315_,0,0);
    VL_SIG8(__PVT___zz_316_,0,0);
    VL_SIG8(__PVT___zz_317_,0,0);
    VL_SIG8(__PVT___zz_318_,0,0);
    VL_SIG8(__PVT___zz_319_,0,0);
    VL_SIG8(__PVT___zz_320_,0,0);
    VL_SIG8(__PVT___zz_321_,0,0);
    VL_SIG8(__PVT___zz_322_,0,0);
    VL_SIG8(__PVT___zz_323_,0,0);
    VL_SIG8(__PVT___zz_324_,0,0);
    VL_SIG8(__PVT___zz_458_,1,0);
    VL_SIG8(__PVT___zz_55_,0,0);
    VL_SIG8(__PVT__decode_REGFILE_WRITE_VALID,0,0);
    VL_SIG8(__PVT__memory_IS_DBUS_SHARING,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_rsp_issueDetected,0,0);
    VL_SIG8(__PVT___zz_89_,0,0);
    VL_SIG8(__PVT___zz_90_,0,0);
    VL_SIG8(__PVT___zz_91_,0,0);
    VL_SIG8(__PVT__decode_arbitration_haltItself,0,0);
    VL_SIG8(__PVT__decode_arbitration_haltByOther,0,0);
    VL_SIG8(__PVT__decode_arbitration_removeIt,0,0);
    VL_SIG8(__PVT__decode_arbitration_flushNext,0,0);
    VL_SIG8(__PVT__decode_arbitration_isValid,0,0);
    VL_SIG8(__PVT__decode_arbitration_isStuck,0,0);
    VL_SIG8(__PVT__decode_arbitration_isFlushed,0,0);
    VL_SIG8(__PVT__execute_arbitration_haltItself,0,0);
    VL_SIG8(__PVT__execute_arbitration_removeIt,0,0);
    VL_SIG8(__PVT__execute_arbitration_flushNext,0,0);
    VL_SIG8(__PVT__execute_arbitration_isValid,0,0);
    VL_SIG8(__PVT__execute_arbitration_isStuck,0,0);
    VL_SIG8(__PVT__execute_arbitration_isStuckByOthers,0,0);
    VL_SIG8(__PVT__execute_arbitration_isFlushed,0,0);
    VL_SIG8(__PVT__memory_arbitration_haltItself,0,0);
    VL_SIG8(__PVT__memory_arbitration_removeIt,0,0);
    VL_SIG8(__PVT__memory_arbitration_flushNext,0,0);
    VL_SIG8(__PVT__memory_arbitration_isValid,0,0);
    VL_SIG8(__PVT__memory_arbitration_isStuck,0,0);
    VL_SIG8(__PVT__memory_arbitration_isFlushed,0,0);
    VL_SIG8(__PVT__writeBack_arbitration_haltItself,0,0);
    VL_SIG8(__PVT__writeBack_arbitration_removeIt,0,0);
    VL_SIG8(__PVT__writeBack_arbitration_flushIt,0,0);
    VL_SIG8(__PVT__writeBack_arbitration_flushNext,0,0);
    VL_SIG8(__PVT__writeBack_arbitration_isValid,0,0);
    VL_SIG8(__PVT__writeBack_arbitration_isFiring,0,0);
    VL_SIG8(lastStageIsValid,0,0);
    VL_SIG8(lastStageIsFiring,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_fetcherHalt,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_fetcherflushIt,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_incomingInstruction,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_decodeExceptionPort_valid,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_decodeExceptionPort_payload_code,3,0);
    VL_SIG8(__PVT__IBusCachedPlugin_mmuBus_rsp_refilling,0,0);
    VL_SIG8(__PVT__DBusCachedPlugin_mmuBus_cmd_bypassTranslation,0,0);
    VL_SIG8(__PVT__DBusCachedPlugin_mmuBus_rsp_refilling,0,0);
    VL_SIG8(__PVT__DBusCachedPlugin_redoBranch_valid,0,0);
    VL_SIG8(__PVT__DBusCachedPlugin_exceptionBus_valid,0,0);
    VL_SIG8(__PVT__DBusCachedPlugin_exceptionBus_payload_code,3,0);
    VL_SIG8(__PVT__MmuPlugin_dBusAccess_cmd_valid,0,0);
    VL_SIG8(__PVT__MmuPlugin_dBusAccess_cmd_ready,0,0);
    VL_SIG8(__PVT__MmuPlugin_dBusAccess_rsp_valid,0,0);
    VL_SIG8(__PVT__decodeExceptionPort_valid,0,0);
    VL_SIG8(__PVT__BranchPlugin_jumpInterface_valid,0,0);
    VL_SIG8(__PVT__BranchPlugin_branchExceptionPort_valid,0,0);
    VL_SIG8(__PVT__CsrPlugin_jumpInterface_valid,0,0);
    VL_SIG8(__PVT__CsrPlugin_privilege,1,0);
    VL_SIG8(__PVT__CsrPlugin_selfException_valid,0,0);
    VL_SIG8(__PVT__CsrPlugin_selfException_payload_code,3,0);
    VL_SIG8(__PVT__IBusCachedPlugin_jump_pcLoad_valid,0,0);
    VL_SIG8(__PVT___zz_98_,3,0);
    VL_SIG8(__PVT___zz_99_,3,0);
    VL_SIG8(__PVT__IBusCachedPlugin_fetchPc_output_valid,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_fetchPc_corrected,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_fetchPc_pcRegPropagate,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_fetchPc_booted,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_fetchPc_inc,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_iBusRsp_stages_1_input_ready,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_iBusRsp_stages_1_output_valid,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_iBusRsp_stages_1_halt,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_iBusRsp_stages_1_inputSample,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_iBusRsp_stages_2_input_ready,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_iBusRsp_stages_2_output_valid,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_iBusRsp_stages_2_halt,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_iBusRsp_stages_2_inputSample,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_iBusRsp_cacheRspArbitration_input_ready,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_iBusRsp_cacheRspArbitration_halt,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_iBusRsp_cacheRspArbitration_inputSample,0,0);
    VL_SIG8(__PVT___zz_109_,0,0);
    VL_SIG8(__PVT___zz_111_,0,0);
    VL_SIG8(__PVT___zz_114_,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_iBusRsp_readyForError,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_iBusRsp_decodeInput_payload_rsp_error,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_iBusRsp_decodeInput_payload_isRvc,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_injector_nextPcCalc_valids_0,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_injector_nextPcCalc_valids_1,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_injector_nextPcCalc_valids_2,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_injector_nextPcCalc_valids_3,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_injector_nextPcCalc_valids_4,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_injector_nextPcCalc_valids_5,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_injector_decodeRemoved,0,0);
    VL_SIG8(__PVT__iBus_rsp_valid,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_s1_tightlyCoupledHit,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_s2_tightlyCoupledHit,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_rsp_redoFetch,0,0);
    VL_SIG8(__PVT__dBus_rsp_valid,0,0);
    VL_SIG8(__PVT__dataCache_1___05Fio_mem_cmd_s2mPipe_valid,0,0);
    VL_SIG8(__PVT__dataCache_1___05Fio_mem_cmd_s2mPipe_ready,0,0);
    VL_SIG8(__PVT___zz_117_,0,0);
    VL_SIG8(__PVT___zz_118_,0,0);
    VL_SIG8(__PVT___zz_121_,3,0);
    VL_SIG8(__PVT___zz_122_,2,0);
    VL_SIG8(__PVT___zz_123_,0,0);
    VL_SIG8(__PVT___zz_124_,0,0);
    VL_SIG8(__PVT___zz_125_,0,0);
    VL_SIG8(__PVT___zz_128_,3,0);
    VL_SIG8(__PVT___zz_129_,2,0);
    VL_SIG8(__PVT___zz_130_,0,0);
    VL_SIG8(__PVT___zz_133_,0,0);
    VL_SIG8(__PVT___zz_135_,0,0);
    VL_SIG8(__PVT__DBusCachedPlugin_forceDatapath,0,0);
    VL_SIG8(__PVT__MmuPlugin_status_sum,0,0);
    VL_SIG8(__PVT__MmuPlugin_status_mxr,0,0);
    VL_SIG8(__PVT__MmuPlugin_status_mprv,0,0);
    VL_SIG8(__PVT__MmuPlugin_satp_mode,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_cache_0_valid,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_cache_0_exception,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_cache_0_superPage,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_cache_0_allowRead,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_cache_0_allowWrite,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_cache_0_allowExecute,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_cache_0_allowUser,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_cache_1_valid,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_cache_1_exception,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_cache_1_superPage,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_cache_1_allowRead,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_cache_1_allowWrite,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_cache_1_allowExecute,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_cache_1_allowUser,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_cache_2_valid,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_cache_2_exception,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_cache_2_superPage,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_cache_2_allowRead,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_cache_2_allowWrite,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_cache_2_allowExecute,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_cache_2_allowUser,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_cache_3_valid,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_cache_3_exception,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_cache_3_superPage,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_cache_3_allowRead,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_cache_3_allowWrite,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_cache_3_allowExecute,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_cache_3_allowUser,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_cacheHits_1,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_cacheHits_2,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_cacheHits_3,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_cacheHit,0,0);
    VL_SIG8(__PVT___zz_139_,1,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_entryToReplace_willIncrement,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_entryToReplace_valueNext,1,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_entryToReplace_value,1,0);
    VL_SIG8(__PVT__MmuPlugin_ports_0_requireMmuLockup,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_cache_0_valid,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_cache_0_exception,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_cache_0_superPage,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_cache_0_allowRead,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_cache_0_allowWrite,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_cache_0_allowExecute,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_cache_0_allowUser,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_cache_1_valid,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_cache_1_exception,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_cache_1_superPage,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_cache_1_allowRead,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_cache_1_allowWrite,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_cache_1_allowExecute,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_cache_1_allowUser,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_cache_2_valid,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_cache_2_exception,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_cache_2_superPage,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_cache_2_allowRead,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_cache_2_allowWrite,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_cache_2_allowExecute,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_cache_2_allowUser,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_cache_3_valid,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_cache_3_exception,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_cache_3_superPage,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_cache_3_allowRead,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_cache_3_allowWrite,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_cache_3_allowExecute,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_cache_3_allowUser,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_cacheHits_1,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_cacheHits_2,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_cacheHits_3,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_cacheHit,0,0);
    VL_SIG8(__PVT___zz_142_,1,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_entryToReplace_willIncrement,0,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_entryToReplace_valueNext,1,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_entryToReplace_value,1,0);
    VL_SIG8(__PVT__MmuPlugin_ports_1_requireMmuLockup,0,0);
    VL_SIG8(__PVT__MmuPlugin_shared_state_1_,2,0);
    VL_SIG8(__PVT__MmuPlugin_shared_portId,0,0);
    VL_SIG8(__PVT__MmuPlugin_shared_dBusRsp_exception,0,0);
    VL_SIG8(__PVT__MmuPlugin_shared_dBusRsp_leaf,0,0);
    VL_SIG8(__PVT__MmuPlugin_shared_pteBuffer_V,0,0);
    VL_SIG8(__PVT__MmuPlugin_shared_pteBuffer_R,0,0);
    VL_SIG8(__PVT__MmuPlugin_shared_pteBuffer_W,0,0);
    VL_SIG8(__PVT__MmuPlugin_shared_pteBuffer_X,0,0);
    VL_SIG8(__PVT__MmuPlugin_shared_pteBuffer_U,0,0);
    VL_SIG8(__PVT__MmuPlugin_shared_pteBuffer_G,0,0);
    VL_SIG8(__PVT__MmuPlugin_shared_pteBuffer_A,0,0);
    VL_SIG8(__PVT__MmuPlugin_shared_pteBuffer_D,0,0);
    VL_SIG8(__PVT__MmuPlugin_shared_pteBuffer_RSW,1,0);
    VL_SIG8(lastStageRegFileWrite_valid,0,0);
    VL_SIG8(lastStageRegFileWrite_payload_address,4,0);
    VL_SIG8(__PVT___zz_159_,0,0);
    VL_SIG8(__PVT__execute_SrcPlugin_less,0,0);
    VL_SIG8(__PVT___zz_169_,0,0);
    VL_SIG8(__PVT___zz_170_,0,0);
    VL_SIG8(__PVT___zz_171_,0,0);
    VL_SIG8(__PVT___zz_172_,0,0);
    VL_SIG8(__PVT___zz_173_,4,0);
    VL_SIG8(__PVT___zz_177_,0,0);
    VL_SIG8(__PVT___zz_178_,0,0);
    VL_SIG8(__PVT___zz_179_,0,0);
    VL_SIG8(__PVT___zz_180_,0,0);
    VL_SIG8(__PVT__execute_BranchPlugin_eq,0,0);
    VL_SIG8(__PVT___zz_191_,1,0);
    VL_SIG8(__PVT__CsrPlugin_mtvec_mode,1,0);
    VL_SIG8(__PVT__CsrPlugin_mstatus_MIE,0,0);
    VL_SIG8(__PVT__CsrPlugin_mstatus_MPIE,0,0);
    VL_SIG8(__PVT__CsrPlugin_mstatus_MPP,1,0);
    VL_SIG8(__PVT__CsrPlugin_mip_MEIP,0,0);
    VL_SIG8(__PVT__CsrPlugin_mip_MTIP,0,0);
    VL_SIG8(__PVT__CsrPlugin_mip_MSIP,0,0);
    VL_SIG8(__PVT__CsrPlugin_mie_MEIE,0,0);
    VL_SIG8(__PVT__CsrPlugin_mie_MTIE,0,0);
    VL_SIG8(__PVT__CsrPlugin_mie_MSIE,0,0);
    VL_SIG8(__PVT__CsrPlugin_mcause_interrupt,0,0);
    VL_SIG8(__PVT__CsrPlugin_mcause_exceptionCode,3,0);
    VL_SIG8(__PVT__CsrPlugin_medeleg_IAM,0,0);
    VL_SIG8(__PVT__CsrPlugin_medeleg_IAF,0,0);
    VL_SIG8(__PVT__CsrPlugin_medeleg_II,0,0);
    VL_SIG8(__PVT__CsrPlugin_medeleg_LAM,0,0);
    VL_SIG8(__PVT__CsrPlugin_medeleg_LAF,0,0);
    VL_SIG8(__PVT__CsrPlugin_medeleg_SAM,0,0);
    VL_SIG8(__PVT__CsrPlugin_medeleg_SAF,0,0);
    VL_SIG8(__PVT__CsrPlugin_medeleg_EU,0,0);
    VL_SIG8(__PVT__CsrPlugin_medeleg_ES,0,0);
    VL_SIG8(__PVT__CsrPlugin_medeleg_IPF,0,0);
    VL_SIG8(__PVT__CsrPlugin_medeleg_LPF,0,0);
    VL_SIG8(__PVT__CsrPlugin_medeleg_SPF,0,0);
    VL_SIG8(__PVT__CsrPlugin_mideleg_ST,0,0);
    VL_SIG8(__PVT__CsrPlugin_mideleg_SE,0,0);
    VL_SIG8(__PVT__CsrPlugin_mideleg_SS,0,0);
    VL_SIG8(__PVT__CsrPlugin_sstatus_SIE,0,0);
    VL_SIG8(__PVT__CsrPlugin_sstatus_SPIE,0,0);
    VL_SIG8(__PVT__CsrPlugin_sstatus_SPP,0,0);
    VL_SIG8(__PVT__CsrPlugin_sip_SEIP_SOFT,0,0);
    VL_SIG8(__PVT__CsrPlugin_sip_SEIP_INPUT,0,0);
    VL_SIG8(__PVT__CsrPlugin_sip_SEIP_OR,0,0);
    VL_SIG8(__PVT__CsrPlugin_sip_STIP,0,0);
    VL_SIG8(__PVT__CsrPlugin_sip_SSIP,0,0);
    VL_SIG8(__PVT__CsrPlugin_sie_SEIE,0,0);
    VL_SIG8(__PVT__CsrPlugin_sie_STIE,0,0);
    VL_SIG8(__PVT__CsrPlugin_sie_SSIE,0,0);
    VL_SIG8(__PVT__CsrPlugin_stvec_mode,1,0);
    VL_SIG8(__PVT__CsrPlugin_scause_interrupt,0,0);
    VL_SIG8(__PVT__CsrPlugin_scause_exceptionCode,3,0);
    VL_SIG8(__PVT__CsrPlugin_satp_MODE,0,0);
    VL_SIG8(__PVT___zz_192_,0,0);
    VL_SIG8(__PVT___zz_193_,0,0);
    VL_SIG8(__PVT___zz_194_,0,0);
    VL_SIG8(__PVT___zz_195_,0,0);
    VL_SIG8(__PVT___zz_196_,0,0);
    VL_SIG8(__PVT___zz_197_,0,0);
    VL_SIG8(__PVT__CsrPlugin_exceptionPortCtrl_exceptionValids_decode,0,0);
    VL_SIG8(__PVT__CsrPlugin_exceptionPortCtrl_exceptionValids_execute,0,0);
    VL_SIG8(__PVT__CsrPlugin_exceptionPortCtrl_exceptionValids_memory,0,0);
    VL_SIG8(__PVT__CsrPlugin_exceptionPortCtrl_exceptionValids_writeBack,0,0);
    VL_SIG8(__PVT__CsrPlugin_exceptionPortCtrl_exceptionValidsRegs_decode,0,0);
    VL_SIG8(__PVT__CsrPlugin_exceptionPortCtrl_exceptionValidsRegs_execute,0,0);
    VL_SIG8(__PVT__CsrPlugin_exceptionPortCtrl_exceptionValidsRegs_memory,0,0);
    VL_SIG8(__PVT__CsrPlugin_exceptionPortCtrl_exceptionValidsRegs_writeBack,0,0);
    VL_SIG8(__PVT__CsrPlugin_exceptionPortCtrl_exceptionContext_code,3,0);
    VL_SIG8(__PVT__CsrPlugin_exceptionPortCtrl_exceptionTargetPrivilegeUncapped,1,0);
    VL_SIG8(__PVT___zz_198_,1,0);
    VL_SIG8(__PVT__CsrPlugin_interrupt_valid,0,0);
    VL_SIG8(CsrPlugin_interrupt_code,3,0);
    VL_SIG8(__PVT__CsrPlugin_interrupt_targetPrivilege,1,0);
    VL_SIG8(__PVT__CsrPlugin_lastStageWasWfi,0,0);
    VL_SIG8(__PVT__CsrPlugin_pipelineLiberator_done,0,0);
    VL_SIG8(CsrPlugin_interruptJump,0,0);
    VL_SIG8(__PVT__CsrPlugin_hadException,0,0);
    VL_SIG8(__PVT__CsrPlugin_targetPrivilege,1,0);
    VL_SIG8(__PVT__CsrPlugin_trapCause,3,0);
    VL_SIG8(__PVT__CsrPlugin_xtvec_mode,1,0);
    VL_SIG8(execute_CsrPlugin_inWfi,0,0);
    VL_SIG8(__PVT__execute_CsrPlugin_wfiWake,0,0);
    VL_SIG8(__PVT__execute_CsrPlugin_blockedBySideEffects,0,0);
    VL_SIG8(__PVT__execute_CsrPlugin_illegalAccess,0,0);
    VL_SIG8(__PVT__execute_CsrPlugin_illegalInstruction,0,0);
    VL_SIG8(__PVT__execute_CsrPlugin_writeEnable,0,0);
    VL_SIG8(__PVT__memory_MulDivIterativePlugin_mul_counter_willIncrement,0,0);
    VL_SIG8(__PVT__memory_MulDivIterativePlugin_mul_counter_willClear,0,0);
    VL_SIG8(__PVT__memory_MulDivIterativePlugin_mul_counter_valueNext,5,0);
    VL_SIG8(__PVT__memory_MulDivIterativePlugin_mul_counter_value,5,0);
    VL_SIG8(__PVT__memory_MulDivIterativePlugin_div_needRevert,0,0);
    VL_SIG8(__PVT__memory_MulDivIterativePlugin_div_counter_willIncrement,0,0);
    VL_SIG8(__PVT__memory_MulDivIterativePlugin_div_counter_willClear,0,0);
    VL_SIG8(__PVT__memory_MulDivIterativePlugin_div_counter_valueNext,5,0);
    VL_SIG8(__PVT__memory_MulDivIterativePlugin_div_counter_value,5,0);
    VL_SIG8(__PVT__memory_MulDivIterativePlugin_div_done,0,0);
    VL_SIG8(__PVT___zz_204_,0,0);
    VL_SIG8(__PVT___zz_205_,0,0);
    VL_SIG8(__PVT__execute_to_memory_BRANCH_DO,0,0);
    VL_SIG8(__PVT__decode_to_execute_MEMORY_LRSC,0,0);
    VL_SIG8(__PVT__decode_to_execute_SHIFT_CTRL,1,0);
    VL_SIG8(__PVT__execute_to_memory_SHIFT_CTRL,1,0);
    VL_SIG8(__PVT__decode_to_execute_MEMORY_MANAGMENT,0,0);
    VL_SIG8(__PVT__decode_to_execute_IS_MUL,0,0);
    VL_SIG8(__PVT__execute_to_memory_IS_MUL,0,0);
    VL_SIG8(__PVT__decode_to_execute_IS_CSR,0,0);
    VL_SIG8(__PVT__decode_to_execute_ALU_CTRL,1,0);
    VL_SIG8(__PVT__decode_to_execute_SRC_LESS_UNSIGNED,0,0);
    VL_SIG8(__PVT__decode_to_execute_REGFILE_WRITE_VALID,0,0);
    VL_SIG8(__PVT__execute_to_memory_REGFILE_WRITE_VALID,0,0);
    VL_SIG8(__PVT__memory_to_writeBack_REGFILE_WRITE_VALID,0,0);
    VL_SIG8(__PVT__decode_to_execute_ENV_CTRL,1,0);
    VL_SIG8(__PVT__execute_to_memory_ENV_CTRL,1,0);
    VL_SIG8(__PVT__memory_to_writeBack_ENV_CTRL,1,0);
    VL_SIG8(__PVT__decode_to_execute_SRC2_CTRL,1,0);
    VL_SIG8(__PVT__decode_to_execute_BYPASSABLE_MEMORY_STAGE,0,0);
    VL_SIG8(__PVT__execute_to_memory_BYPASSABLE_MEMORY_STAGE,0,0);
    VL_SIG8(__PVT__decode_to_execute_SRC_USE_SUB_LESS,0,0);
    VL_SIG8(__PVT__decode_to_execute_CSR_READ_OPCODE,0,0);
    VL_SIG8(__PVT__decode_to_execute_MEMORY_AMO,0,0);
    VL_SIG8(__PVT__decode_to_execute_MEMORY_WR,0,0);
    VL_SIG8(__PVT__execute_to_memory_MEMORY_WR,0,0);
    VL_SIG8(__PVT__memory_to_writeBack_MEMORY_WR,0,0);
    VL_SIG8(__PVT__decode_to_execute_SRC1_CTRL,1,0);
    VL_SIG8(__PVT__decode_to_execute_IS_RS1_SIGNED,0,0);
    VL_SIG8(__PVT__decode_to_execute_IS_DIV,0,0);
    VL_SIG8(__PVT__execute_to_memory_IS_DIV,0,0);
    VL_SIG8(__PVT__execute_to_memory_MEMORY_ADDRESS_LOW,1,0);
    VL_SIG8(__PVT__memory_to_writeBack_MEMORY_ADDRESS_LOW,1,0);
    VL_SIG8(__PVT__decode_to_execute_ALU_BITWISE_CTRL,1,0);
    VL_SIG8(__PVT__execute_to_memory_IS_DBUS_SHARING,0,0);
    VL_SIG8(__PVT__memory_to_writeBack_IS_DBUS_SHARING,0,0);
    VL_SIG8(__PVT__decode_to_execute_IS_SFENCE_VMA,0,0);
    VL_SIG8(__PVT__execute_to_memory_IS_SFENCE_VMA,0,0);
    VL_SIG8(__PVT__memory_to_writeBack_IS_SFENCE_VMA,0,0);
    VL_SIG8(__PVT__decode_to_execute_MEMORY_ENABLE,0,0);
    VL_SIG8(__PVT__execute_to_memory_MEMORY_ENABLE,0,0);
    VL_SIG8(__PVT__memory_to_writeBack_MEMORY_ENABLE,0,0);
    VL_SIG8(__PVT__decode_to_execute_CSR_WRITE_OPCODE,0,0);
    VL_SIG8(__PVT__decode_to_execute_BRANCH_CTRL,1,0);
    VL_SIG8(__PVT__decode_to_execute_IS_RS2_SIGNED,0,0);
    VL_SIG8(__PVT__decode_to_execute_BYPASSABLE_EXECUTE_STAGE,0,0);
    VL_SIG8(__PVT__decode_to_execute_SRC2_FORCE_ZERO,0,0);
    VL_SIG8(__PVT___zz_211_,2,0);
    VL_SIG8(__PVT___zz_212_,0,0);
    VL_SIG8(__PVT___zz_213_,2,0);
    VL_SIG8(__PVT___zz_214_,0,0);
    VL_SIG8(__PVT___zz_215_,0,0);
    VL_SIG8(__PVT___zz_217_,0,0);
    VL_SIG8(__PVT___zz_219_,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_cache__DOT___zz_12_,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_cache__DOT___zz_13_,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_cache__DOT___zz_1_,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_cache__DOT___zz_2_,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_cache__DOT__lineLoader_fire,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_cache__DOT__lineLoader_valid,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_cache__DOT__lineLoader_hadError,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_cache__DOT__lineLoader_flushPending,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_cache__DOT__lineLoader_flushCounter,7,0);
    VL_SIG8(__PVT__IBusCachedPlugin_cache__DOT___zz_3_,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_cache__DOT__lineLoader_cmdSent,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_cache__DOT__lineLoader_wayToAllocate_willIncrement,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_cache__DOT__lineLoader_wordIndex,2,0);
    VL_SIG8(__PVT__IBusCachedPlugin_cache__DOT__decodeStage_mmuRsp_isIoAccess,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_cache__DOT__decodeStage_mmuRsp_allowRead,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_cache__DOT__decodeStage_mmuRsp_allowWrite,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_cache__DOT__decodeStage_mmuRsp_allowExecute,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_cache__DOT__decodeStage_mmuRsp_exception,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_cache__DOT__decodeStage_mmuRsp_refilling,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_cache__DOT__decodeStage_hit_valid,0,0);
    VL_SIG8(__PVT__IBusCachedPlugin_cache__DOT__decodeStage_hit_error,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT___zz_12_,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT___zz_13_,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT___zz_14_,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT___zz_16_,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT___zz_17_,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT___zz_18_,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT___zz_19_,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT___zz_20_,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT___zz_21_,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT___zz_22_,2,0);
    VL_SIG8(__PVT__dataCache_1___DOT___zz_36_,1,0);
    VL_SIG8(__PVT__dataCache_1___DOT___zz_1_,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT___zz_2_,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__tagsReadCmd_valid,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__tagsReadCmd_payload,6,0);
    VL_SIG8(__PVT__dataCache_1___DOT__tagsWriteCmd_valid,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__tagsWriteCmd_payload_way,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__tagsWriteCmd_payload_address,6,0);
    VL_SIG8(__PVT__dataCache_1___DOT__tagsWriteCmd_payload_data_valid,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__tagsWriteCmd_payload_data_error,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__tagsWriteLastCmd_valid,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__tagsWriteLastCmd_payload_way,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__tagsWriteLastCmd_payload_address,6,0);
    VL_SIG8(__PVT__dataCache_1___DOT__tagsWriteLastCmd_payload_data_valid,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__tagsWriteLastCmd_payload_data_error,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__dataReadCmd_valid,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__dataWriteCmd_valid,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__dataWriteCmd_payload_way,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__dataWriteCmd_payload_mask,3,0);
    VL_SIG8(__PVT__dataCache_1___DOT__stage0_mask,3,0);
    VL_SIG8(__PVT__dataCache_1___DOT__stageA_request_wr,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__stageA_request_size,1,0);
    VL_SIG8(__PVT__dataCache_1___DOT__stageA_request_isLrsc,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__stageA_request_isAmo,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__stageA_request_amoCtrl_swap,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__stageA_request_amoCtrl_alu,2,0);
    VL_SIG8(__PVT__dataCache_1___DOT__stageA_mask,3,0);
    VL_SIG8(__PVT__dataCache_1___DOT__stage0_colisions_regNextWhen,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__stageB_request_wr,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__stageB_request_size,1,0);
    VL_SIG8(__PVT__dataCache_1___DOT__stageB_request_isLrsc,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__stageB_isAmo,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__stageB_request_amoCtrl_swap,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__stageB_request_amoCtrl_alu,2,0);
    VL_SIG8(__PVT__dataCache_1___DOT__stageB_mmuRspFreeze,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__stageB_mmuRsp_isIoAccess,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__stageB_mmuRsp_allowRead,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__stageB_mmuRsp_allowWrite,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__stageB_mmuRsp_allowExecute,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__stageB_mmuRsp_exception,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__stageB_mmuRsp_refilling,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__stageB_tagsReadRsp_0_valid,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__stageB_tagsReadRsp_0_error,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__stageB_waysHits,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__stageB_mask,3,0);
    VL_SIG8(__PVT__dataCache_1___DOT__stageB_colisions,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__stageB_loaderValid,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__stageB_flusher_valid,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__stageB_lrsc_reserved,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__stageB_amo_resultRegValid,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__stageB_memCmdSent,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__loader_valid,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__loader_counter_willIncrement,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__loader_counter_valueNext,2,0);
    VL_SIG8(__PVT__dataCache_1___DOT__loader_counter_value,2,0);
    VL_SIG8(__PVT__dataCache_1___DOT__loader_counter_willOverflow,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__loader_waysAllocator,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT__loader_error,0,0);
    VL_SIG8(__PVT__dataCache_1___DOT___zz_38_,7,0);
    VL_SIG8(__PVT__dataCache_1___DOT___zz_39_,7,0);
    VL_SIG8(__PVT__dataCache_1___DOT___zz_40_,7,0);
    VL_SIG8(__PVT__dataCache_1___DOT___zz_41_,7,0);
    VL_SIG16(__PVT___zz_252_,9,0);
    VL_SIG16(__PVT___zz_253_,9,0);
    VL_SIG16(__PVT___zz_254_,9,0);
    VL_SIG16(__PVT___zz_255_,9,0);
    VL_SIG16(__PVT___zz_263_,9,0);
    VL_SIG16(__PVT___zz_264_,9,0);
    VL_SIG16(__PVT___zz_265_,9,0);
    VL_SIG16(__PVT___zz_266_,9,0);
    VL_SIG16(__PVT__MmuPlugin_ports_0_cache_0_virtualAddress_0,9,0);
    VL_SIG16(__PVT__MmuPlugin_ports_0_cache_0_virtualAddress_1,9,0);
    VL_SIG16(__PVT__MmuPlugin_ports_0_cache_0_physicalAddress_0,9,0);
    VL_SIG16(__PVT__MmuPlugin_ports_0_cache_0_physicalAddress_1,9,0);
    VL_SIG16(__PVT__MmuPlugin_ports_0_cache_1_virtualAddress_0,9,0);
    VL_SIG16(__PVT__MmuPlugin_ports_0_cache_1_virtualAddress_1,9,0);
    VL_SIG16(__PVT__MmuPlugin_ports_0_cache_1_physicalAddress_0,9,0);
    VL_SIG16(__PVT__MmuPlugin_ports_0_cache_1_physicalAddress_1,9,0);
    VL_SIG16(__PVT__MmuPlugin_ports_0_cache_2_virtualAddress_0,9,0);
    VL_SIG16(__PVT__MmuPlugin_ports_0_cache_2_virtualAddress_1,9,0);
    VL_SIG16(__PVT__MmuPlugin_ports_0_cache_2_physicalAddress_0,9,0);
    VL_SIG16(__PVT__MmuPlugin_ports_0_cache_2_physicalAddress_1,9,0);
    VL_SIG16(__PVT__MmuPlugin_ports_0_cache_3_virtualAddress_0,9,0);
    VL_SIG16(__PVT__MmuPlugin_ports_0_cache_3_virtualAddress_1,9,0);
    VL_SIG16(__PVT__MmuPlugin_ports_0_cache_3_physicalAddress_0,9,0);
    VL_SIG16(__PVT__MmuPlugin_ports_0_cache_3_physicalAddress_1,9,0);
    VL_SIG16(__PVT__MmuPlugin_ports_1_cache_0_virtualAddress_0,9,0);
    VL_SIG16(__PVT__MmuPlugin_ports_1_cache_0_virtualAddress_1,9,0);
    VL_SIG16(__PVT__MmuPlugin_ports_1_cache_0_physicalAddress_0,9,0);
    VL_SIG16(__PVT__MmuPlugin_ports_1_cache_0_physicalAddress_1,9,0);
    VL_SIG16(__PVT__MmuPlugin_ports_1_cache_1_virtualAddress_0,9,0);
    VL_SIG16(__PVT__MmuPlugin_ports_1_cache_1_virtualAddress_1,9,0);
    VL_SIG16(__PVT__MmuPlugin_ports_1_cache_1_physicalAddress_0,9,0);
    VL_SIG16(__PVT__MmuPlugin_ports_1_cache_1_physicalAddress_1,9,0);
    VL_SIG16(__PVT__MmuPlugin_ports_1_cache_2_virtualAddress_0,9,0);
    VL_SIG16(__PVT__MmuPlugin_ports_1_cache_2_virtualAddress_1,9,0);
    VL_SIG16(__PVT__MmuPlugin_ports_1_cache_2_physicalAddress_0,9,0);
    VL_SIG16(__PVT__MmuPlugin_ports_1_cache_2_physicalAddress_1,9,0);
    VL_SIG16(__PVT__MmuPlugin_ports_1_cache_3_virtualAddress_0,9,0);
    VL_SIG16(__PVT__MmuPlugin_ports_1_cache_3_virtualAddress_1,9,0);
    VL_SIG16(__PVT__MmuPlugin_ports_1_cache_3_physicalAddress_0,9,0);
    VL_SIG16(__PVT__MmuPlugin_ports_1_cache_3_physicalAddress_1,9,0);
    VL_SIG16(__PVT__MmuPlugin_shared_vpn_0,9,0);
    VL_SIG16(__PVT__MmuPlugin_shared_vpn_1,9,0);
    VL_SIG16(__PVT__MmuPlugin_shared_pteBuffer_PPN0,9,0);
    VL_SIG16(__PVT__MmuPlugin_shared_pteBuffer_PPN1,11,0);
    VL_SIG16(__PVT___zz_185_,10,0);
    VL_SIG16(__PVT__CsrPlugin_satp_ASID,8,0);
    VL_SIG16(__PVT__dataCache_1___DOT__dataReadCmd_payload,9,0);
    VL_SIG16(__PVT__dataCache_1___DOT__dataWriteCmd_payload_address,9,0);
    VL_SIG(__PVT___zz_230_,31,0);
    VL_SIG(__PVT___zz_232_,31,0);
    VL_SIG(__PVT___zz_246_,31,0);
    VL_SIG(__PVT___zz_247_,31,0);
    VL_SIG(__PVT__IBusCachedPlugin_cache_io_cpu_fetch_data,31,0);
    VL_SIG(__PVT__dataCache_1___05Fio_cpu_writeBack_data,31,0);
    VL_SIG(__PVT__dataCache_1___05Fio_mem_cmd_payload_address,31,0);
    VL_SIG(__PVT___zz_36_,31,0);
    VL_SIG(__PVT__decode_RS2,31,0);
    VL_SIG(__PVT__decode_RS1,31,0);
    VL_SIG(__PVT___zz_37_,31,0);
    VL_SIG(__PVT___zz_87_,31,0);
    VL_SIG(__PVT___zz_92_,31,0);
    VL_SIG(__PVT___zz_93_,31,0);
    VL_SIG(__PVT___zz_94_,31,0);
    VL_SIG(lastStageInstruction,31,0);
    VL_SIG(lastStagePc,31,0);
    VL_SIG(__PVT__IBusCachedPlugin_mmuBus_rsp_physicalAddress,31,0);
    VL_SIG(__PVT__DBusCachedPlugin_mmuBus_rsp_physicalAddress,31,0);
    VL_SIG(__PVT__MmuPlugin_dBusAccess_cmd_payload_address,31,0);
    VL_SIG(__PVT__CsrPlugin_jumpInterface_payload,31,0);
    VL_SIG(IBusCachedPlugin_fetchPc_pcReg,31,0);
    VL_SIG(__PVT__IBusCachedPlugin_fetchPc_pc,31,0);
    VL_SIG(__PVT___zz_112_,31,0);
    VL_SIG(__PVT___zz_115_,31,0);
    VL_SIG(__PVT___zz_116_,31,0);
    VL_SIG(__PVT__IBusCachedPlugin_rspCounter,31,0);
    VL_SIG(__PVT___zz_119_,31,0);
    VL_SIG(__PVT___zz_120_,31,0);
    VL_SIG(__PVT___zz_126_,31,0);
    VL_SIG(__PVT___zz_127_,31,0);
    VL_SIG(__PVT___zz_131_,31,0);
    VL_SIG(__PVT__DBusCachedPlugin_rspCounter,31,0);
    VL_SIG(__PVT__writeBack_DBusCachedPlugin_rspShifted,31,0);
    VL_SIG(__PVT___zz_134_,31,0);
    VL_SIG(__PVT___zz_136_,31,0);
    VL_SIG(__PVT__MmuPlugin_satp_ppn,19,0);
    VL_SIG(lastStageRegFileWrite_payload_data,31,0);
    VL_SIG(__PVT___zz_161_,31,0);
    VL_SIG(__PVT___zz_163_,19,0);
    VL_SIG(__PVT___zz_165_,19,0);
    VL_SIG(__PVT___zz_166_,31,0);
    VL_SIG(__PVT__execute_SrcPlugin_addSub,31,0);
    VL_SIG(__PVT___zz_167_,31,0);
    VL_SIG(__PVT__execute_FullBarrelShifterPlugin_reversed,31,0);
    VL_SIG(__PVT___zz_168_,31,0);
    VL_SIG(__PVT___zz_174_,31,0);
    VL_SIG(__PVT___zz_187_,19,0);
    VL_SIG(__PVT___zz_189_,18,0);
    VL_SIG(__PVT__CsrPlugin_mtvec_base,29,0);
    VL_SIG(__PVT__CsrPlugin_mepc,31,0);
    VL_SIG(__PVT__CsrPlugin_mscratch,31,0);
    VL_SIG(__PVT__CsrPlugin_mtval,31,0);
    VL_SIG(__PVT__CsrPlugin_stvec_base,29,0);
    VL_SIG(__PVT__CsrPlugin_sscratch,31,0);
    VL_SIG(__PVT__CsrPlugin_stval,31,0);
    VL_SIG(__PVT__CsrPlugin_sepc,31,0);
    VL_SIG(__PVT__CsrPlugin_satp_PPN,21,0);
    VL_SIG(__PVT__CsrPlugin_exceptionPortCtrl_exceptionContext_badAddr,31,0);
    VL_SIG(__PVT__CsrPlugin_xtvec_base,29,0);
    VL_SIG(__PVT__execute_CsrPlugin_readData,31,0);
    VL_SIG(__PVT__execute_CsrPlugin_readToWriteData,31,0);
    VL_SIG(__PVT__execute_CsrPlugin_writeData,31,0);
    VL_SIG(__PVT__memory_MulDivIterativePlugin_rs2,31,0);
    VL_SIGW(__PVT__memory_MulDivIterativePlugin_accumulator,64,0,3);
    VL_SIG(__PVT__memory_MulDivIterativePlugin_div_result,31,0);
    VL_SIG(__PVT___zz_203_,31,0);
    VL_SIG(__PVT__externalInterruptArray_regNext,31,0);
    VL_SIG(__PVT___zz_207_,31,0);
    VL_SIG(__PVT___zz_208_,31,0);
    VL_SIG(__PVT___zz_209_,31,0);
    VL_SIG(__PVT___zz_210_,31,0);
    VL_SIG(__PVT__decode_to_execute_RS2,31,0);
    VL_SIG(__PVT__decode_to_execute_INSTRUCTION,31,0);
    VL_SIG(__PVT__execute_to_memory_INSTRUCTION,31,0);
    VL_SIG(__PVT__memory_to_writeBack_INSTRUCTION,31,0);
    VL_SIG(__PVT__execute_to_memory_SHIFT_RIGHT,31,0);
    VL_SIG(__PVT__decode_to_execute_PC,31,0);
    VL_SIG(__PVT__execute_to_memory_PC,31,0);
    VL_SIG(__PVT__memory_to_writeBack_PC,31,0);
    VL_SIG(__PVT__decode_to_execute_FORMAL_PC_NEXT,31,0);
    VL_SIG(__PVT__execute_to_memory_FORMAL_PC_NEXT,31,0);
    VL_SIG(__PVT__memory_to_writeBack_FORMAL_PC_NEXT,31,0);
    VL_SIG(__PVT__execute_to_memory_REGFILE_WRITE_DATA,31,0);
    VL_SIG(__PVT__memory_to_writeBack_REGFILE_WRITE_DATA,31,0);
    VL_SIG(__PVT__decode_to_execute_RS1,31,0);
    VL_SIG(__PVT__execute_to_memory_BRANCH_CALC,31,0);
    VL_SIG(__PVT__iBusWishbone_DAT_MISO_regNext,31,0);
    VL_SIG(__PVT__dBusWishbone_DAT_MISO_regNext,31,0);
    VL_SIGW(__PVT__decode_SRC1_CTRL_string,95,0,3);
    VL_SIGW(__PVT__decode_SHIFT_CTRL_string,71,0,3);
    VL_SIGW(__PVT__memory_SHIFT_CTRL_string,71,0,3);
    VL_SIGW(__PVT__execute_SHIFT_CTRL_string,71,0,3);
    VL_SIGW(__PVT__execute_SRC1_CTRL_string,95,0,3);
    VL_SIGW(__PVT__decode_to_execute_SHIFT_CTRL_string,71,0,3);
    VL_SIGW(__PVT__execute_to_memory_SHIFT_CTRL_string,71,0,3);
    VL_SIGW(__PVT__decode_to_execute_SRC1_CTRL_string,95,0,3);
    VL_SIG(__PVT__IBusCachedPlugin_cache__DOT___zz_10_,21,0);
    VL_SIG(__PVT__IBusCachedPlugin_cache__DOT___zz_11_,31,0);
    VL_SIG(__PVT__IBusCachedPlugin_cache__DOT__lineLoader_address,31,0);
    VL_SIG(__PVT__IBusCachedPlugin_cache__DOT__io_cpu_fetch_data_regNextWhen,31,0);
    VL_SIG(__PVT__IBusCachedPlugin_cache__DOT__decodeStage_mmuRsp_physicalAddress,31,0);
    VL_SIG(__PVT__dataCache_1___DOT___zz_10_,21,0);
    VL_SIG(__PVT__dataCache_1___DOT___zz_25_,31,0);
    VL_SIG(__PVT__dataCache_1___DOT__tagsWriteCmd_payload_data_address,19,0);
    VL_SIG(__PVT__dataCache_1___DOT__tagsWriteLastCmd_payload_data_address,19,0);
    VL_SIG(__PVT__dataCache_1___DOT__dataWriteCmd_payload_data,31,0);
    VL_SIG(__PVT__dataCache_1___DOT__stageA_request_data,31,0);
    VL_SIG(__PVT__dataCache_1___DOT__stageB_request_data,31,0);
    VL_SIG(__PVT__dataCache_1___DOT__stageB_mmuRsp_physicalAddress,31,0);
    VL_SIG(__PVT__dataCache_1___DOT__stageB_tagsReadRsp_0_address,19,0);
    VL_SIG(__PVT__dataCache_1___DOT__stageB_dataReadRsp_0,31,0);
    VL_SIG(__PVT__dataCache_1___DOT__stageB_requestDataBypass,31,0);
    VL_SIG(__PVT__dataCache_1___DOT__stageB_amo_resultReg,31,0);
    VL_SIG64(__PVT___zz_389_,33,0);
    VL_SIG64(__PVT___zz_390_,32,0);
    VL_SIG64(__PVT___zz_398_,32,0);
    VL_SIG64(__PVT___zz_403_,32,0);
    VL_SIG64(__PVT___zz_143_,34,0);
    VL_SIG64(__PVT__CsrPlugin_mcycle,63,0);
    VL_SIG64(__PVT__CsrPlugin_minstret,63,0);
    VL_SIG64(__PVT__memory_MulDivIterativePlugin_rs1,32,0);
    VL_SIG64(__PVT___zz_201_,32,0);
    VL_SIG64(__PVT___zz_202_,32,0);
    VL_SIG64(__PVT___zz_206_,32,0);
    VL_SIG64(__PVT__MmuPlugin_shared_state_1___05Fstring,47,0);
    VL_SIG(RegFilePlugin_regFile[32],31,0);
    VL_SIG(__PVT__IBusCachedPlugin_cache__DOT__ways_0_tags[128],21,0);
    VL_SIG(__PVT__IBusCachedPlugin_cache__DOT__ways_0_datas[1024],31,0);
    VL_SIG(__PVT__dataCache_1___DOT__ways_0_tags[128],21,0);
    VL_SIG8(__PVT__dataCache_1___DOT__ways_0_data_symbol0[1024],7,0);
    VL_SIG8(__PVT__dataCache_1___DOT__ways_0_data_symbol1[1024],7,0);
    VL_SIG8(__PVT__dataCache_1___DOT__ways_0_data_symbol2[1024],7,0);
    VL_SIG8(__PVT__dataCache_1___DOT__ways_0_data_symbol3[1024],7,0);
    
    // LOCAL VARIABLES
    static VL_ST_SIGW(__Vtable1___PVT__decode_SRC1_CTRL_string[4],95,0,3);
    static VL_ST_SIGW(__Vtable7___PVT__decode_SHIFT_CTRL_string[4],71,0,3);
    static VL_ST_SIGW(__Vtable11___PVT__memory_SHIFT_CTRL_string[4],71,0,3);
    static VL_ST_SIGW(__Vtable13___PVT__execute_SHIFT_CTRL_string[4],71,0,3);
    static VL_ST_SIGW(__Vtable15___PVT__execute_SRC1_CTRL_string[4],95,0,3);
    static VL_ST_SIG64(__Vtable19___PVT__MmuPlugin_shared_state_1___05Fstring[8],47,0);
    static VL_ST_SIGW(__Vtable22___PVT__decode_to_execute_SHIFT_CTRL_string[4],71,0,3);
    static VL_ST_SIGW(__Vtable23___PVT__execute_to_memory_SHIFT_CTRL_string[4],71,0,3);
    static VL_ST_SIGW(__Vtable24___PVT__decode_to_execute_SRC1_CTRL_string[4],95,0,3);
    static VL_ST_SIG8(__Vtable25___PVT__MmuPlugin_dBusAccess_cmd_valid[8],0,0);
    VL_SIG8(__Vtableidx1,1,0);
    VL_SIG8(__Vtableidx7,1,0);
    VL_SIG8(__Vtableidx11,1,0);
    VL_SIG8(__Vtableidx13,1,0);
    VL_SIG8(__Vtableidx15,1,0);
    VL_SIG8(__Vtableidx19,2,0);
    VL_SIG8(__Vtableidx22,1,0);
    VL_SIG8(__Vtableidx23,1,0);
    VL_SIG8(__Vtableidx24,1,0);
    VL_SIG8(__Vtableidx25,2,0);
    
    // INTERNAL VARIABLES
  private:
    Vdut__Syms* __VlSymsp;  // Symbol table
  public:
    
    // PARAMETERS
    
    // CONSTRUCTORS
  private:
    Vdut_VexRiscv& operator= (const Vdut_VexRiscv&);  ///< Copying not allowed
    Vdut_VexRiscv(const Vdut_VexRiscv&);  ///< Copying not allowed
  public:
    Vdut_VexRiscv(const char* name="TOP");
    ~Vdut_VexRiscv();
    void trace (VerilatedVcdC* tfp, int levels, int options=0);
    
    // API METHODS
    
    // INTERNAL METHODS
    void __Vconfigure(Vdut__Syms* symsp, bool first);
  private:
    void _ctor_var_reset();
  public:
    static void _initial__TOP__dut__VexRiscv__1(Vdut__Syms* __restrict vlSymsp);
    static void _sequent__TOP__dut__VexRiscv__3(Vdut__Syms* __restrict vlSymsp);
    static void _sequent__TOP__dut__VexRiscv__4(Vdut__Syms* __restrict vlSymsp);
    static void _settle__TOP__dut__VexRiscv__2(Vdut__Syms* __restrict vlSymsp);
    static void traceInit (VerilatedVcd* vcdp, void* userthis, uint32_t code);
    static void traceFull (VerilatedVcd* vcdp, void* userthis, uint32_t code);
    static void traceChg  (VerilatedVcd* vcdp, void* userthis, uint32_t code);
} VL_ATTR_ALIGNED(128);

#endif // guard
